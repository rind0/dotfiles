[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['denops.vim', 'context_filetype.vim', 'pum.vim']
on_event = ['InsertEnter', 'CmdlineEnter']
hook_source = '''
inoremap <silent><expr> <TAB>
    \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' :
    \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
    \ '<TAB>' : ddc#manual_complete()
inoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
inoremap <C-n>   <Cmd>call pum#map#select_relative(+1)<CR>
inoremap <C-p>   <Cmd>call pum#map#select_relative(-1)<CR>
inoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
inoremap <C-e>   <Cmd>call pum#map#cancel()<CR>
'''
hook_post_source = '''
call ddc#custom#patch_global('completionMenu', 'pum.vim')
call ddc#custom#patch_global('sources', ['nvim-lsp', 'buffer', 'around', 'vsnip','file'])
call ddc#custom#patch_global('sourceOptions', {
    \ '_': {
    \   'matchers': ['matcher_fuzzy'],
    \   'sorters': ['sorter_fuzzy'],
    \   'converters': ['converter_truncate', 'converter_remove_overlap', 'converter_fuzzy'],
    \   'ignoreCase': v:true,
    \ },
    \ 'around': {
    \   'mark': 'A',
    \ },
    \ 'buffer': {
    \   'mark': 'B',
    \   'maxCandidates': 10,
    \   'ignoreCase': v:true,
    \ },
    \ 'file': {
    \   'mark': 'F',
    \   'isVolatile': v:true,
    \   'forceCompletionPattern': '\S/\S*',
    \ },
    \ 'nvim-lsp': {
    \   'mark': 'lsp',
    \   'forceCompletionPattern': "\\.|:\\s*|->",
    \   'ignoreCase': v:true,
    \ },
    \ 'vsnip': {
    \   'dup': v:true,
    \ }})
call ddc#custom#patch_global('sourceParams', {
    \ 'around': {
    \   'maxSize': 500,
    \ },
    \ 'buffer': {
    \   'fromAltBuf': v:true,
    \   'forceCollect': v:true,
    \   'showBufName': v:true,
    \ }})
call ddc#custom#patch_global('filterParams', {
    \ 'matcher_fuzzy': {
    \   'splitMode': 'word',
    \ },
    \ 'converter_truncate': {
    \   'maxAbbrWidth': 60,
    \   'maxInfo': 500,
    \   'ellipsis': '...',
    \ }})
call ddc#custom#patch_global('specialBufferCompletion', v:true)
call ddc#custom#patch_filetype(['vim', 'toml'], {
    \ 'sources': ['buffer', 'around', 'vsnip', 'file']
    \ })
call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_event = ['BufRead']

[[plugins]]
repo = 'Shougo/pum.vim'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = ['ddc.vim']

[[plugins]]
repo = 'tani/ddc-fuzzy'
on_source = ['ddc.vim']

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = ['ddc.vim']

[[plugins]]
repo = 'shun/ddc-vim-lsp'
if = "!has('nvim')"
on_source = ['ddc.vim']

[[plugins]]
repo = 'matsui54/ddc-buffer'
on_source = ['ddc.vim']

[[plugins]]
repo = 'matsui54/ddc-converter_truncate'
on_source = ['ddc.vim']

[[plugins]]
repo = 'LumaKernel/ddc-file'
on_source = ['ddc.vim']

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
depends = ['vim-vsnip-integ', 'friendly-snippets']
on_source = ['ddc.vim']
on_event = ['InsertEnter']
hook_add = '''
let g:vsnip_snippet_dir = expand('~/dotfiles/nvim/snippets')
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
on_source = ['ddc.vim']

[[plugins]]
repo = 'rafamadriz/friendly-snippets'
on_source = ['ddc.vim']

[[plugins]]
repo = 'matsui54/denops-signature_help'
on_source = ['ddc.vim']
hook_post_source = '''
call signature_help#enable()
let g:lsp_signature_help_enabled = 0
'''

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
on_source = ['ddc.vim']
hook_post_source = '''
let g:popup_preview_config = {
    \ 'delay': 30,
    \ 'maxWidth': 100,
    \ 'winblend': 0,
    \ }
call popup_preview#enable()
let g:markdown_fenced_languages = ['ts=typescript']
'''
